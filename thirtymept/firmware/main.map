Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/crttn2313.o (exit)
/usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

t0ovfcnt            0x2               main.o
nextfreq            0x1               main.o
bytecnt             0x1               main.o
unitcnt             0x1               main.o
txcomplete          0x1               main.o
bitcnt              0x1               main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/crttn2313.o
LOAD main.o
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/libm.a
START GROUP
LOAD /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/libm.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x230
 *(.vectors)
 .vectors       0x0000000000000000       0x26 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/crttn2313.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000026                . = ALIGN (0x2)
                0x0000000000000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000026        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000026                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000026                __ctors_start = .
 *(.ctors)
                0x0000000000000026                __ctors_end = .
                0x0000000000000026                __dtors_start = .
 *(.dtors)
                0x0000000000000026                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000026        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/crttn2313.o
                0x0000000000000026                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000026        0x8 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/crttn2313.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000000000002e       0x16 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_copy_data.o)
                0x000000000000002e                __do_copy_data
 .init4         0x0000000000000044       0x10 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
                0x0000000000000044                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000054        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/crttn2313.o
 *(.init9)
 *(.text)
 .text          0x0000000000000058        0x2 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/crttn2313.o
                0x0000000000000058                __vector_1
                0x0000000000000058                __vector_12
                0x0000000000000058                __bad_interrupt
                0x0000000000000058                __vector_3
                0x0000000000000058                __vector_11
                0x0000000000000058                __vector_13
                0x0000000000000058                __vector_17
                0x0000000000000058                __vector_7
                0x0000000000000058                __vector_5
                0x0000000000000058                __vector_4
                0x0000000000000058                __vector_9
                0x0000000000000058                __vector_2
                0x0000000000000058                __vector_15
                0x0000000000000058                __vector_8
                0x0000000000000058                __vector_14
                0x0000000000000058                __vector_10
                0x0000000000000058                __vector_16
                0x0000000000000058                __vector_18
 .text          0x000000000000005a      0x16a main.o
                0x000000000000005a                spi_init
                0x000000000000006a                spi_transfer
                0x0000000000000080                ad9850_setfreq
                0x000000000000009e                key_init
                0x00000000000000a4                keyfsk
                0x0000000000000124                timer0_start
                0x000000000000013c                timer0_stop
                0x000000000000014a                __vector_6
 .text          0x00000000000001c4        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text          0x00000000000001c4        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text          0x00000000000001c4        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
                0x00000000000001c4                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x00000000000001c4       0x68 main.o
                0x00000000000001c4                main
 .text.libgcc.mul
                0x000000000000022c        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.div
                0x000000000000022c        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc   0x000000000000022c        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x000000000000022c        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x000000000000022c        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x000000000000022c        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x000000000000022c        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x000000000000022c        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x000000000000022c        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text.libgcc   0x000000000000022c        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x000000000000022c        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x000000000000022c        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x000000000000022c        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x000000000000022c        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x000000000000022c        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x000000000000022c        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc   0x000000000000022c        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x000000000000022c        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x000000000000022c        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x000000000000022c        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x000000000000022c        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
                0x000000000000022c                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000000000000022c        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_exit.o)
                0x000000000000022c                exit
                0x000000000000022c                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000000000000022c        0x4 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000230                _etext = .

.data           0x0000000000800060       0x12 load address 0x0000000000000230
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/crttn2313.o
 .data          0x0000000000800060        0x0 main.o
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 .rodata        0x0000000000800060       0x12 main.o
                0x0000000000800060                call
                0x0000000000800068                ad9850fhi
                0x000000000080006d                ad9850flo
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800072                . = ALIGN (0x2)
                0x0000000000800072                _edata = .
                0x0000000000800072                PROVIDE (__data_end, .)

.bss            0x0000000000800072        0x7
                0x0000000000800072                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800072        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/crttn2313.o
 .bss           0x0000000000800072        0x0 main.o
 .bss           0x0000000000800072        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .bss           0x0000000000800072        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .bss           0x0000000000800072        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800072        0x7 main.o
                0x0000000000800072                t0ovfcnt
                0x0000000000800074                nextfreq
                0x0000000000800075                bytecnt
                0x0000000000800076                unitcnt
                0x0000000000800077                txcomplete
                0x0000000000800078                bitcnt
                0x0000000000800079                PROVIDE (__bss_end, .)
                0x0000000000000230                __data_load_start = LOADADDR (.data)
                0x0000000000000242                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800079        0x0
                0x0000000000800079                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800079                PROVIDE (__noinit_end, .)
                0x0000000000800079                _end = .
                0x0000000000800079                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000      0x6b4
 *(.stab)
 .stab          0x0000000000000000      0x6b4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/crttn2313.o

.stabstr        0x0000000000000000       0x54
 *(.stabstr)
 .stabstr       0x0000000000000000       0x54 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/crttn2313.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 main.o
                                         0x12 (size before relaxing)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x28
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x28 main.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x34c
 *(.debug_info)
 .debug_info    0x0000000000000000      0x34c main.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x0000000000000000      0x140
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x140 main.o

.debug_line     0x0000000000000000       0xe4
 *(.debug_line)
 .debug_line    0x0000000000000000       0xe4 main.o

.debug_frame    0x0000000000000000      0x10c
 *(.debug_frame)
 .debug_frame   0x0000000000000000      0x10c main.o

.debug_str      0x0000000000000000      0x239
 *(.debug_str)
 .debug_str     0x0000000000000000      0x239 main.o
                                        0x26d (size before relaxing)

.debug_loc      0x0000000000000000      0x1f9
 *(.debug_loc)
 .debug_loc     0x0000000000000000      0x1f9 main.o

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x0000000000000000       0x18
 *(.debug_ranges)
 .debug_ranges  0x0000000000000000       0x18 main.o

.debug_macro
 *(.debug_macro)
OUTPUT(main.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
__bad_interrupt                                   /usr/lib/gcc/avr/4.8.2/../../../avr/lib/crttn2313.o
__bss_end                                         /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
__data_end                                        /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_copy_data.o)
__do_clear_bss                                    /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
                                                  main.o
__do_copy_data                                    /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_copy_data.o)
                                                  main.o
__heap_end                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/crttn2313.o
__init                                            /usr/lib/gcc/avr/4.8.2/../../../avr/lib/crttn2313.o
__stack                                           /usr/lib/gcc/avr/4.8.2/../../../avr/lib/crttn2313.o
__vector_1                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/crttn2313.o
__vector_10                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/crttn2313.o
__vector_11                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/crttn2313.o
__vector_12                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/crttn2313.o
__vector_13                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/crttn2313.o
__vector_14                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/crttn2313.o
__vector_15                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/crttn2313.o
__vector_16                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/crttn2313.o
__vector_17                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/crttn2313.o
__vector_18                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/crttn2313.o
__vector_2                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/crttn2313.o
__vector_3                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/crttn2313.o
__vector_4                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/crttn2313.o
__vector_5                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/crttn2313.o
__vector_6                                        main.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/crttn2313.o
__vector_7                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/crttn2313.o
__vector_8                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/crttn2313.o
__vector_9                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/crttn2313.o
__vector_default                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/crttn2313.o
__vectors                                         /usr/lib/gcc/avr/4.8.2/../../../avr/lib/crttn2313.o
_exit                                             /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_exit.o)
ad9850_setfreq                                    main.o
ad9850fhi                                         main.o
ad9850flo                                         main.o
bitcnt                                            main.o
bytecnt                                           main.o
call                                              main.o
exit                                              /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/crttn2313.o
key_init                                          main.o
keyfsk                                            main.o
main                                              main.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/crttn2313.o
nextfreq                                          main.o
spi_init                                          main.o
spi_transfer                                      main.o
t0ovfcnt                                          main.o
timer0_start                                      main.o
timer0_stop                                       main.o
txcomplete                                        main.o
unitcnt                                           main.o
